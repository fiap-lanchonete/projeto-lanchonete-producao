name: Deploy CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci
  
    - name: Login to DockerHub
      run: docker login -u rickwalking -p ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build . -t rickwalking/lanchonete-producao:latest
        docker push rickwalking/lanchonete-producao:latest

    - name: Install AWS CLI
      run: |
          sudo apt-get update
          sudo apt-get install -y awscli

    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Install kubectl
      run: |
        sudo apt-get update
        sudo apt-get install -y kubectl

    - name: Deploy to Kubernetes
      run: |
        aws eks update-kubeconfig --name ${{ secrets.KUBERNETES_CLUSTER_NAME }}
        echo "$KUBE_CONFIG_DATA" | base64 -d > kubeconfig.yaml
        kubectl apply -f kubernetes/api/
        kubectl apply -f kubernetes/db/
